{"version":3,"sources":["components/FormInput/index.js","components/FormRow/index.js","components/FormTextArea/index.js","components/SubmitBtn/index.js","components/Alert/index.js","components/FormContainer/index.js","pages/Contact.js","utils/FadeIn.js"],"names":["FormInput","type","label","placeholder","onChange","className","name","required","FormRow","props","children","FormTextArea","rows","SubmitBtn","btnDisable","disabled","Alert","alertState","alert","msg","style","display","role","require","config","ContactFormContainer","useState","userName","setUserName","userEmail","setUserEmail","userMessage","setUserMessage","emailAlert","setEmailAlert","setBtnDisable","templateParams","from_name","reply_to","message","handleInputChange","e","target","value","sendEmail","a","emailjs","send","process","response","console","log","status","text","document","querySelector","reset","error","onSubmit","preventDefault","sitekey","ContactPage","FadeIn","delay","duration","fadeIn","keyframes","Wrapper","styled","div","delegated","animationDuration","animationDelay"],"mappings":"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","file":"static/js/7.13bfab58.chunk.js","sourcesContent":["import React from 'react';\n\n/** Props passed from FormContainer */\nconst FormInput = ({ type, label, placeholder, onChange }) => {\n    /** Render FormInput */\n    return ( \n        <>\n            <label className='mt-3'>\n                { label }\n            </label>\n\n            <input type={ type } className=\"form-control\" name={ label } placeholder={ placeholder } onChange={ onChange } required />\n        </>\n    );\n}\n \nexport default FormInput;","import React from 'react';\n\n/** Props passed from FormContainer */\nconst FormRow = (props) => {\n    /** Render FormRow */\n    return (  \n        <section className = \"form-row mt-3\" >\n            { props.children }\n        </ section>        \n    );\n}\n \nexport default FormRow;","import React from 'react';\n\n/** Props passed from FormContainer */\nconst FormTextArea = ({ type, label, placeholder, onChange}) => {\n    /** Render FormTextArea */\n    return (\n       <>\n            <label>\n                { label }\n            </label>\n\n            <textarea type={ type } className=\"form-control\" rows=\"6\" name={ label } placeholder={ placeholder } onChange={ onChange }>\n            </textarea>\n       </>\n    );\n}\n \nexport default FormTextArea;","import React from 'react';\n\n/** Props passed from FormContainer */\nconst SubmitBtn = ({ btnDisable }) => {\n    return (\n        /** Render form submit button */\n        <button className=\"btn btn-lg btn-dark btn-block mt-4\" type=\"submit\" disabled={ btnDisable }>\n            Submit\n        </button>\n    );\n}\n \nexport default SubmitBtn;","import React from 'react';\nimport './style.css'\n\n/** Props passed from FormContainer */\nconst Alert = ({ alertState }) => {\n    const { alert, type, msg } = alertState;\n\n    /** Render alert. Type and msg dependent on email send status */\n    return ( \n        <div style={ alert ? { display: 'block' } : { display: 'none'}} \n            className={ `alert alert-${ type ? 'success' : 'danger' }` } \n            role=\"alert\">\n            <span>\n                { msg }\n            </span>\n        </div>\n    );\n}\n \nexport default Alert;","import React, { useState } from 'react';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport './style.css'\nimport emailjs from 'emailjs-com';\nimport FormInput from '../FormInput';\nimport FormRow from '../FormRow';\nimport FormTextArea from '../FormTextArea';\nimport SubmitBtn from '../SubmitBtn';\nimport Alert from '../Alert';\nrequire('dotenv').config()\n\n\nconst ContactFormContainer = () => {\n    /** State for user inputs */\n    const [userName, setUserName] = useState('');\n    const [userEmail, setUserEmail] = useState('');\n    const [userMessage, setUserMessage] = useState('');\n    /** State for email send status for status alert */\n    const [emailAlert, setEmailAlert] = useState({ \n        alert: false, \n        type: false, \n        msg:''\n    });\n    /**  State for btn availability */\n    const [btnDisable, setBtnDisable] = useState(true)\n\n    /** \n     * Setup email template per state of users inputs \n     * @type {Object}\n     */\n    const templateParams = {\n        from_name: userName,\n        reply_to: userEmail,\n        message: userMessage\n    }\n\n    /**\n     * Function to set the state of the user inputs\n     * \n     * @param {Object} e event object\n     * @returns {string} the users input to state\n     */\n    const handleInputChange = e => {\n        const  { name, value } = e.target;\n        switch ( name ) {\n            case 'Name':\n                setUserName(value);\n                break;\n            case 'Email':\n                setUserEmail(value);\n                break;\n            case 'Message':\n                setUserMessage(value);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /** \n     * Function to set the btn availability state when the captcha \n     * is passed\n     */\n    const  captchaOnChange = () => {\n        setBtnDisable(false)\n    };\n\n\n    /** \n     * Function that sends email via emailjs and alerts the user \n     * of the send status. Formatting docs:\n     * https://www.emailjs.com/docs/examples/reactjs/\n     * \n     * @returns {string} console.log with the status of the email\n     */\n    const sendEmail = async () => {\n        try {\n            const response = await emailjs.send(\n                process.env.REACT_APP_EMJS_SID,\n                process.env.REACT_APP_EMJS_TID,\n                templateParams,\n                process.env.REACT_APP_EMJS_UID\n            );\n            console.log('SUCCESS!', response.status, response.text);\n            document.querySelector('form').reset();\n            setEmailAlert({ alert: true, type: true, msg: 'Thanks for reaching out. I\\'ll be in touch shortly.' })\n\n        } catch (err) {\n            console.error('FAILED...', err)\n            document.querySelector('form').reset();\n            setEmailAlert({ alert: true, type: false, msg: 'Aw man. Somethings broke. Please send me an email to natemking@gmail.com' })\n        }\n    };\n\n    /**\n     * Function that on form submit call the sendEmail function \n     * \n     * @param {Object} e  event object\n     */\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        sendEmail();\n    }\n\n    /** Render the FormContainer */\n    return ( \n        <section className=\"container-sm col-md-8 col-lg-6 mt-3 form__container\">\n\n            <h3>Communicate.</h3>\n\n            <form className=\"form-group\" onSubmit={ handleFormSubmit }>\n                \n                <FormRow>\n                    <section className=\"col-md-6\" >\n                        <FormInput type='text' label='Name' placeholder='name' onChange={ handleInputChange } />\n                    </section>\n                    <section className=\"col-md-6\" >\n                        <FormInput type='email' label='Email' placeholder='name@email.com' onChange={ handleInputChange } />\n                    </section>\n                </FormRow>\n\n                <FormRow>\n                    <FormTextArea type='text' label='Message' placeholder='message' onChange={ handleInputChange } />\n                </FormRow>\n\n                <FormRow>\n                    <section className=\"col-md-4\">\n                        <ReCAPTCHA\n                            sitekey={ process.env.REACT_APP_GOOG_RECAP_KEY }\n                            onChange={ captchaOnChange }\n                        />\n                        <SubmitBtn btnDisable={ btnDisable }/>\n                    </section>\n                </FormRow>\n\n            </form>\n            \n                <Alert alertState={ emailAlert }/>\n            \n        </section>\n    );\n}\n \nexport default ContactFormContainer;","import React from 'react';\nimport FadeIn from '../utils/FadeIn'\nimport ContactForm from '../components/FormContainer';\n\nconst ContactPage = () => {\n    return (\n        /** Render contact page w/ fade in effect */\n        <FadeIn delay={250} duration={450}>\n            <ContactForm />\n        </FadeIn>\n    );\n}\n \nexport default ContactPage;","/**FadeIn.js by Josh Comeau \n * https://www.joshwcomeau.com/snippets/react-components/fade-in/ \n */\n\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\nconst FadeIn = ({\n    duration = 300,\n    delay = 0,\n    children,\n    ...delegated\n}) => {\n    return (\n        <Wrapper\n            {...delegated}\n            style={{\n                ...(delegated.style || {}),\n                animationDuration: duration + 'ms',\n                animationDelay: delay + 'ms',\n            }}\n        >\n            {children}\n        </Wrapper>\n    );\n};\nconst Wrapper = styled.div`\n  @media (prefers-reduced-motion: no-preference) {\n    animation-name: ${fadeIn};\n    animation-fill-mode: backwards;\n  }\n`;\nexport default FadeIn"],"sourceRoot":""}